
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BREAK CASE CLASS COLON COMMA CONST CONTINUE DEC DIV ELSE EQ EXTENDS FALSE FOR FUNCTION GT GTE ID IF INC LBRACE LBRACKET LET LPAREN LT LTE MINUS MOD MULT NEQ NOT NUMBER PLUS PUNTO RBRACE RBRACKET RETURN RPAREN SEMICOLON SEQ SNEQ STRING SWITCH TRUE WHILEprograma : cuerpocuerpo : sentencia\n| sentencia cuerpofuncion : FUNCTION ID LPAREN RPAREN LBRACE RBRACE\n| FUNCTION ID LPAREN RPAREN LBRACE body RBRACEbody : sentencia\n| sentencia bodysentencia : asignacion\n| declaracion\n| impresion\n| input_teclado\n| sentencia_while\n| funcion\n| claseasignacion : LET ID ASSIGN expresion SEMICOLONdeclaracion : CONST ID ASSIGN expresion SEMICOLONimpresion : ID PUNTO ID LPAREN STRING RPAREN SEMICOLONinput_teclado : LET ID ASSIGN ID LPAREN STRING RPAREN SEMICOLONelementos : elementos COMMA expresion\n| expresionsentencia_while : WHILE LPAREN expresion RPAREN bloquebloque : LBRACE cuerpo RBRACEexpresion : NUMBER\n| STRING\n| ID\n| LBRACKET elementos RBRACKET\n| LPAREN expresion RPARENclase : CLASS ID LBRACE cuerpo_clase RBRACEcuerpo_clase : cuerpo_clase elemento_clase\n| elemento_claseelemento_clase : funcion\n| asignacion\n| declaracion'
    
_lr_action_items = {'LET':([0,3,4,5,6,7,8,9,10,34,44,45,46,47,48,51,53,55,56,59,60,61,67,69,72,73,74,76,],[11,11,-8,-9,-10,-11,-12,-13,-14,49,49,-30,-31,-32,-33,-15,-16,-21,11,11,-28,-29,-4,11,-17,-22,-5,-18,]),'CONST':([0,3,4,5,6,7,8,9,10,34,44,45,46,47,48,51,53,55,56,59,60,61,67,69,72,73,74,76,],[13,13,-8,-9,-10,-11,-12,-13,-14,13,13,-30,-31,-32,-33,-15,-16,-21,13,13,-28,-29,-4,13,-17,-22,-5,-18,]),'ID':([0,3,4,5,6,7,8,9,10,11,13,15,16,19,21,24,26,27,32,49,51,53,55,56,58,59,60,67,69,70,72,73,74,76,],[12,12,-8,-9,-10,-11,-12,-13,-14,18,20,22,23,25,31,35,31,31,31,62,-15,-16,-21,12,31,12,-28,-4,12,31,-17,-22,-5,-18,]),'WHILE':([0,3,4,5,6,7,8,9,10,51,53,55,56,59,60,67,69,72,73,74,76,],[14,14,-8,-9,-10,-11,-12,-13,-14,-15,-16,-21,14,14,-28,-4,14,-17,-22,-5,-18,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,34,44,45,46,47,48,51,53,55,56,59,60,61,67,69,72,73,74,76,],[15,15,-8,-9,-10,-11,-12,-13,-14,15,15,-30,-31,-32,-33,-15,-16,-21,15,15,-28,-29,-4,15,-17,-22,-5,-18,]),'CLASS':([0,3,4,5,6,7,8,9,10,51,53,55,56,59,60,67,69,72,73,74,76,],[16,16,-8,-9,-10,-11,-12,-13,-14,-15,-16,-21,16,16,-28,-4,16,-17,-22,-5,-18,]),'$end':([1,2,3,4,5,6,7,8,9,10,17,51,53,55,60,67,72,73,74,76,],[0,-1,-2,-8,-9,-10,-11,-12,-13,-14,-3,-15,-16,-21,-28,-4,-17,-22,-5,-18,]),'RBRACE':([3,4,5,6,7,8,9,10,17,44,45,46,47,48,51,53,55,59,60,61,65,67,68,69,72,73,74,75,76,],[-2,-8,-9,-10,-11,-12,-13,-14,-3,60,-30,-31,-32,-33,-15,-16,-21,67,-28,-29,73,-4,74,-6,-17,-22,-5,-7,-18,]),'PUNTO':([12,],[19,]),'LPAREN':([14,21,22,24,25,26,27,32,35,58,70,],[21,27,33,27,37,27,27,27,50,27,27,]),'ASSIGN':([18,20,62,],[24,26,70,]),'NUMBER':([21,24,26,27,32,58,70,],[29,29,29,29,29,29,29,]),'STRING':([21,24,26,27,32,37,50,58,70,],[30,30,30,30,30,52,63,30,30,]),'LBRACKET':([21,24,26,27,32,58,70,],[32,32,32,32,32,32,32,]),'LBRACE':([23,40,43,],[34,56,59,]),'RPAREN':([28,29,30,31,33,39,52,54,57,63,],[40,-23,-24,-25,43,54,64,-27,-26,71,]),'SEMICOLON':([29,30,31,35,36,38,54,57,64,71,],[-23,-24,-25,-25,51,53,-27,-26,72,76,]),'RBRACKET':([29,30,31,41,42,54,57,66,],[-23,-24,-25,57,-20,-27,-26,-19,]),'COMMA':([29,30,31,41,42,54,57,66,],[-23,-24,-25,58,-20,-27,-26,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'cuerpo':([0,3,56,],[2,17,65,]),'sentencia':([0,3,56,59,69,],[3,3,3,69,69,]),'asignacion':([0,3,34,44,56,59,69,],[4,4,47,47,4,4,4,]),'declaracion':([0,3,34,44,56,59,69,],[5,5,48,48,5,5,5,]),'impresion':([0,3,56,59,69,],[6,6,6,6,6,]),'input_teclado':([0,3,56,59,69,],[7,7,7,7,7,]),'sentencia_while':([0,3,56,59,69,],[8,8,8,8,8,]),'funcion':([0,3,34,44,56,59,69,],[9,9,46,46,9,9,9,]),'clase':([0,3,56,59,69,],[10,10,10,10,10,]),'expresion':([21,24,26,27,32,58,70,],[28,36,38,39,42,66,36,]),'elementos':([32,],[41,]),'cuerpo_clase':([34,],[44,]),'elemento_clase':([34,44,],[45,61,]),'bloque':([40,],[55,]),'body':([59,69,],[68,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','sintactico.py',16),
  ('cuerpo -> sentencia','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> sentencia cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',22),
  ('funcion -> FUNCTION ID LPAREN RPAREN LBRACE RBRACE','funcion',6,'p_funcion','sintactico.py',27),
  ('funcion -> FUNCTION ID LPAREN RPAREN LBRACE body RBRACE','funcion',7,'p_funcion','sintactico.py',28),
  ('body -> sentencia','body',1,'p_body','sintactico.py',34),
  ('body -> sentencia body','body',2,'p_body','sintactico.py',35),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',38),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','sintactico.py',39),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','sintactico.py',40),
  ('sentencia -> input_teclado','sentencia',1,'p_sentencia','sintactico.py',41),
  ('sentencia -> sentencia_while','sentencia',1,'p_sentencia','sintactico.py',42),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','sintactico.py',43),
  ('sentencia -> clase','sentencia',1,'p_sentencia','sintactico.py',44),
  ('asignacion -> LET ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','sintactico.py',49),
  ('declaracion -> CONST ID ASSIGN expresion SEMICOLON','declaracion',5,'p_declaracion','sintactico.py',52),
  ('impresion -> ID PUNTO ID LPAREN STRING RPAREN SEMICOLON','impresion',7,'p_impresion','sintactico.py',57),
  ('input_teclado -> LET ID ASSIGN ID LPAREN STRING RPAREN SEMICOLON','input_teclado',8,'p_input_teclado','sintactico.py',61),
  ('elementos -> elementos COMMA expresion','elementos',3,'p_elementos','sintactico.py',66),
  ('elementos -> expresion','elementos',1,'p_elementos','sintactico.py',67),
  ('sentencia_while -> WHILE LPAREN expresion RPAREN bloque','sentencia_while',5,'p_sentencia_while','sintactico.py',72),
  ('bloque -> LBRACE cuerpo RBRACE','bloque',3,'p_bloque','sintactico.py',76),
  ('expresion -> NUMBER','expresion',1,'p_expresion','sintactico.py',81),
  ('expresion -> STRING','expresion',1,'p_expresion','sintactico.py',82),
  ('expresion -> ID','expresion',1,'p_expresion','sintactico.py',83),
  ('expresion -> LBRACKET elementos RBRACKET','expresion',3,'p_expresion','sintactico.py',84),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion','sintactico.py',85),
  ('clase -> CLASS ID LBRACE cuerpo_clase RBRACE','clase',5,'p_clase','sintactico.py',91),
  ('cuerpo_clase -> cuerpo_clase elemento_clase','cuerpo_clase',2,'p_cuerpo_clase','sintactico.py',95),
  ('cuerpo_clase -> elemento_clase','cuerpo_clase',1,'p_cuerpo_clase','sintactico.py',96),
  ('elemento_clase -> funcion','elemento_clase',1,'p_elemento_clase','sintactico.py',100),
  ('elemento_clase -> asignacion','elemento_clase',1,'p_elemento_clase','sintactico.py',101),
  ('elemento_clase -> declaracion','elemento_clase',1,'p_elemento_clase','sintactico.py',102),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightELSEleftORleftANDrightNOTleftEQNEQleftGTLTGTELTEleftPLUSMINUSleftMULTDIVMODrightUMINUSUPLUSleftPUNTOleftLBRACKETleftLPARENrightASSIGNAND ASSIGN BOOLEAN CLASS COLON COMMA CONST DEC DIV ELSE EQ FALSE FOR FUNCTION GT GTE ID IF IN INC LBRACE LBRACKET LENGTH LET LPAREN LT LTE MINUS MOD MULT NEQ NEW NOT NUMBER NUMBER_TYPE OF OR PLUS PUNTO RBRACE RBRACKET RETURN RPAREN SEMICOLON SIZE STRING STRING_TYPE TEMPLATE_LITERAL TRUE WHILEprograma : cuerpocuerpo : sentencias\n| emptysentencias : sentencia\n| sentencias sentenciasentencia : asignacion\n| declaracion\n| impresion\n| input_teclado\n| sentencia_if\n| sentencia_while\n| sentencia_for\n| sentencia_for_in\n| funcion\n| clase\n| sentencia_return\n| llamada_funcion_stmt\n| bloquesentencia_return : RETURN expresion SEMICOLON\n| RETURN SEMICOLONllamada_funcion_stmt : llamada_funcion SEMICOLON\n| llamada_metodo SEMICOLONasignacion : LET ID ASSIGN expresion SEMICOLON\n| LET ID COLON tipo ASSIGN expresion SEMICOLON\n| variable ASSIGN expresion SEMICOLONdeclaracion : CONST ID ASSIGN expresion SEMICOLON\n| CONST ID COLON tipo ASSIGN expresion SEMICOLON\n| LET ID COLON tipo SEMICOLON\n| declaracion_array\n| declaracion_map_setdeclaracion_array : LET ID COLON tipo_array ASSIGN expresion SEMICOLONdeclaracion_map_set : LET ID COLON tipo_generico ASSIGN NEW ID LPAREN argumentos_constructor RPAREN SEMICOLON\n| LET ID COLON tipo_generico ASSIGN NEW ID LPAREN RPAREN SEMICOLONargumentos_constructor : array_de_pares\n| argumentos\n| array_literaltipo : tipo_primitivo\n| tipo_array\n| tipo_generico\n| IDtipo_primitivo : STRING_TYPE\n| NUMBER_TYPE\n| BOOLEANtipo_array : tipo_primitivo LBRACKET RBRACKET\n| ID LBRACKET RBRACKETtipo_generico : ID LT tipo GT\n| ID LT tipo COMMA tipo GTvariable : ID\n| variable PUNTO ID\n| variable LBRACKET expresion RBRACKETllamada_funcion : ID LPAREN argumentos RPAREN\n| ID LPAREN RPARENllamada_metodo : variable PUNTO ID LPAREN argumentos RPAREN\n| variable PUNTO ID LPAREN RPARENargumentos : expresion\n| argumentos COMMA expresionimpresion : console_log SEMICOLONconsole_log : ID PUNTO ID LPAREN lista_argumentos RPARENlista_argumentos : argumentos\n| string_especial\n| lista_argumentos COMMA argumentos\n| lista_argumentos COMMA string_especial\n| emptystring_especial : STRING\n| TEMPLATE_LITERAL\n| LBRACE ID RBRACEinput_teclado : LET ID ASSIGN llamada_funcion SEMICOLONsentencia_if : IF LPAREN expresion RPAREN sentencia_ejecutable\n| IF LPAREN expresion RPAREN sentencia_ejecutable ELSE sentencia_ejecutablesentencia_ejecutable : bloque\n| asignacion\n| impresion\n| input_teclado\n| llamada_funcion_stmt\n| sentencia_return\n| sentencia_if\n| sentencia_while\n| sentencia_forsentencia_while : WHILE LPAREN expresion RPAREN bloquesentencia_for : FOR LPAREN inicializacion SEMICOLON condicion SEMICOLON incremento RPAREN bloquesentencia_for_in : FOR LPAREN LET ID IN expresion RPAREN bloque\n| FOR LPAREN LET ID OF expresion RPAREN bloqueinicializacion : LET ID ASSIGN expresion\n| variable ASSIGN expresion\n| LET ID COLON tipo\n| emptycondicion : expresion\n| emptyincremento : ID INC\n| ID DEC\n| variable ASSIGN expresion\n| emptybloque : LBRACE cuerpo RBRACE\n| LBRACE RBRACEexpresion : expresion PLUS expresion\n| expresion MINUS expresion\n| expresion MULT expresion\n| expresion DIV expresion\n| expresion MOD expresionexpresion : MINUS expresion %prec UMINUS\n| PLUS expresion %prec UPLUSexpresion : expresion GT expresion\n| expresion LT expresion\n| expresion GTE expresion\n| expresion LTE expresion\n| expresion EQ expresion\n| expresion NEQ expresionexpresion : expresion AND expresion\n| expresion OR expresionexpresion : NOT expresionexpresion : expresion PUNTO ID\n| expresion LBRACKET expresion RBRACKETexpresion : llamada_funcion\n| llamada_metodoexpresion : NUMBER\n| STRING\n| variable\n| TRUE\n| FALSE\n| TEMPLATE_LITERAL\n| LPAREN expresion RPAREN\n| array_literal\n| map_set_literalarray_literal : LBRACKET elementos RBRACKET\n| LBRACKET RBRACKETelementos : expresion\n| elementos COMMA expresionmap_set_literal : NEW ID LPAREN array_de_pares RPAREN\n| NEW ID LPAREN argumentos RPAREN\n| NEW ID LPAREN RPARENarray_de_pares : LBRACKET pares RBRACKETpares : par\n| pares COMMA parpar : LBRACKET expresion COMMA expresion RBRACKETfuncion : FUNCTION ID LPAREN parametros RPAREN LBRACE cuerpo RBRACE\n| FUNCTION ID LPAREN parametros RPAREN COLON tipo LBRACE cuerpo RBRACE\n| FUNCTION ID LPAREN RPAREN LBRACE cuerpo RBRACE\n| FUNCTION ID LPAREN RPAREN COLON tipo LBRACE cuerpo RBRACEparametros : parametro\n| parametros COMMA parametroparametro : ID\n| ID COLON tipo\n| ID COLON tipo_generico\n| ID COLON tipo_arrayclase : CLASS ID LBRACE cuerpo_clase RBRACEcuerpo_clase : elementos_clase\n| emptyelementos_clase : elemento_clase\n| elementos_clase elemento_claseelemento_clase : funcion\n| asignacion\n| declaracionexpresion : variable PUNTO ID LPAREN RPAREN\n| variable PUNTO ID LPAREN argumentos RPAREN\n| variable PUNTO SIZE\n| variable PUNTO LENGTHexpresion : variable PUNTO IDexpresion : NEW ID LPAREN array_literal RPARENempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,35,43,44,50,53,71,91,93,131,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,227,277,278,283,284,295,309,310,311,324,327,331,332,334,],[-159,0,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,-5,-57,-21,-94,-20,-22,-93,-19,-25,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-145,-24,-31,-27,-69,-137,-81,-82,-135,-80,-138,-33,-136,-32,]),'LET':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,47,50,53,71,91,92,93,131,138,149,151,152,153,154,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,228,249,251,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[19,19,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,19,-5,-57,-21,86,-94,-20,-22,-93,155,-19,-25,210,155,-148,-150,-151,-152,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,19,-145,-149,210,286,19,-24,-31,-27,-69,-137,19,-81,-82,-135,19,-80,-138,-33,-136,-32,]),'CONST':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,92,93,131,149,151,152,153,154,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,228,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[22,22,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,22,-5,-57,-21,-94,-20,-22,-93,22,-19,-25,22,-148,-150,-151,-152,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,22,-145,-149,22,-24,-31,-27,-69,-137,22,-81,-82,-135,22,-80,-138,-33,-136,-32,]),'IF':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,93,131,138,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,249,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[27,27,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,27,-5,-57,-21,-94,-20,-22,-93,-19,-25,27,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,27,-145,27,27,-24,-31,-27,-69,-137,27,-81,-82,-135,27,-80,-138,-33,-136,-32,]),'WHILE':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,93,131,138,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,249,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[28,28,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,28,-5,-57,-21,-94,-20,-22,-93,-19,-25,28,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,28,-145,28,28,-24,-31,-27,-69,-137,28,-81,-82,-135,28,-80,-138,-33,-136,-32,]),'FOR':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,93,131,138,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,249,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[29,29,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,29,-5,-57,-21,-94,-20,-22,-93,-19,-25,211,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,29,-145,211,29,-24,-31,-27,-69,-137,29,-81,-82,-135,29,-80,-138,-33,-136,-32,]),'FUNCTION':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,92,93,131,149,151,152,153,154,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,228,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[30,30,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,30,-5,-57,-21,-94,-20,-22,-93,30,-19,-25,30,-148,-150,-151,-152,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,30,-145,-149,30,-24,-31,-27,-69,-137,30,-81,-82,-135,30,-80,-138,-33,-136,-32,]),'CLASS':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,93,131,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[32,32,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,32,-5,-57,-21,-94,-20,-22,-93,-19,-25,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,32,-145,32,-24,-31,-27,-69,-137,32,-81,-82,-135,32,-80,-138,-33,-136,-32,]),'RETURN':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,53,71,91,93,131,138,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,249,261,277,278,283,284,295,296,309,310,311,312,324,327,331,332,334,],[33,33,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,33,-5,-57,-21,-94,-20,-22,-93,-19,-25,33,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,33,-145,33,33,-24,-31,-27,-69,-137,33,-81,-82,-135,33,-80,-138,-33,-136,-32,]),'LBRACE':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,50,51,53,71,91,93,120,124,125,126,127,128,131,136,137,138,139,146,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,223,225,227,238,243,245,249,261,265,275,277,278,283,284,291,292,294,295,296,305,309,310,311,312,317,324,327,331,332,334,],[31,31,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,31,-5,-57,-21,-94,92,-20,-22,-93,-19,-40,-37,-41,-42,-43,194,-25,-38,-39,31,31,225,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,261,31,-145,-45,-44,194,31,31,296,-46,-24,-31,-27,-69,31,31,312,-137,31,31,-81,-82,-135,31,-47,-80,-138,-33,-136,-32,]),'ID':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,24,30,31,32,33,35,37,38,39,40,41,43,44,45,46,47,50,53,54,55,56,58,67,70,71,72,73,81,82,86,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,128,130,131,132,138,140,142,143,149,151,152,153,154,155,173,178,179,180,182,183,184,185,194,198,199,200,201,202,203,204,205,206,207,208,209,210,212,216,217,218,219,222,224,225,226,227,228,232,237,242,245,249,251,252,261,262,266,272,276,277,278,283,284,285,286,295,296,302,308,309,310,311,312,314,316,323,324,327,331,332,334,],[20,20,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,42,-29,-30,48,20,51,57,-5,74,57,57,79,57,-57,-21,57,57,87,-94,-20,57,57,57,57,57,117,-22,57,120,57,120,141,144,-93,87,-19,57,57,57,57,57,57,57,57,57,57,57,57,57,170,57,174,57,57,-25,57,20,57,57,221,87,-148,-150,-151,-152,229,57,57,-23,-67,120,57,-28,57,246,-26,57,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,250,-79,57,57,57,120,257,144,20,120,-145,-149,57,57,279,57,20,87,288,20,120,57,57,120,-24,-31,-27,-69,120,304,-137,20,57,57,-81,-82,-135,20,57,57,57,-80,-138,-33,-136,-32,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,31,35,43,44,49,50,53,71,91,92,93,131,148,149,150,151,152,153,154,179,180,184,198,200,201,202,203,204,205,206,207,208,209,212,225,227,228,246,261,264,277,278,283,284,293,295,296,309,310,311,312,313,324,326,327,331,332,334,],[-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-29,-30,50,-5,-57,-21,91,-94,-20,-22,-93,-159,-19,-25,227,-146,-147,-148,-150,-151,-152,-23,-67,-28,-26,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-159,-145,-149,282,-159,295,-24,-31,-27,-69,311,-137,-159,-81,-82,-135,-159,327,-80,332,-138,-33,-136,-32,]),'ASSIGN':([20,21,36,42,79,87,88,120,121,122,123,124,125,126,127,133,135,136,137,141,156,221,229,238,243,250,275,288,289,303,304,317,],[-48,39,72,81,-49,-48,142,-40,183,185,186,-37,-41,-42,-43,-50,199,-38,-39,218,39,-49,266,-45,-44,72,-46,-48,308,183,218,-47,]),'PUNTO':([20,21,52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,79,80,83,84,87,88,109,110,111,113,114,116,118,119,129,133,134,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,221,230,231,233,234,240,241,248,253,254,255,267,269,270,271,288,289,297,298,322,325,328,329,],[37,40,107,-48,-113,-114,-115,-116,115,-118,-119,-120,-122,-123,-52,107,107,-49,107,107,107,-48,143,107,107,107,-125,107,107,107,-113,-51,-50,107,143,107,107,107,107,107,107,107,107,107,107,107,107,107,-111,107,-124,-49,-155,-156,-121,-116,-120,107,107,107,-49,-112,107,-122,-130,107,107,107,107,107,107,-54,-158,-128,-129,-48,143,-53,107,-122,107,107,107,]),'LBRACKET':([20,21,33,38,39,41,45,46,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,77,78,79,80,81,83,84,87,88,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,113,114,116,118,119,120,124,125,126,127,128,129,130,132,133,134,140,142,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,183,185,192,193,195,199,214,216,217,218,220,221,230,231,232,233,234,237,240,241,245,248,253,254,255,257,266,267,269,270,271,272,288,289,297,298,300,302,308,314,316,322,323,325,328,329,],[-48,41,58,58,58,58,58,58,108,58,58,58,-48,58,-113,-114,-115,-116,41,-118,-119,-120,58,-122,-123,58,-52,108,108,-49,108,58,108,108,-48,41,58,58,58,58,58,58,58,58,58,58,58,58,58,58,108,108,108,-125,108,108,108,-113,181,187,-41,-42,-43,58,-51,58,58,-50,108,58,58,41,108,108,108,108,108,108,108,108,108,108,108,108,108,-111,108,-124,58,-49,-155,-156,-121,237,58,58,-116,-120,108,58,108,58,58,58,108,-49,-112,108,58,-122,-130,272,108,108,58,108,108,108,108,181,58,-54,-158,-128,-129,58,-48,41,-53,108,316,323,58,58,58,-122,272,108,108,108,]),'LPAREN':([20,27,28,29,33,38,39,41,45,46,48,54,55,56,57,58,67,72,74,79,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,128,130,132,140,142,173,174,178,183,185,199,211,216,217,218,232,237,245,266,272,279,302,308,314,316,323,],[38,45,46,47,67,67,67,67,67,67,90,67,67,67,38,67,67,67,128,132,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,178,67,67,67,67,67,67,232,67,67,67,67,251,67,67,67,67,67,67,67,67,302,67,67,67,67,67,]),'SEMICOLON':([25,26,33,34,47,52,57,59,60,61,62,63,64,65,66,68,69,76,78,85,89,109,110,111,113,118,119,120,121,122,123,124,125,126,127,129,133,134,136,137,140,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,175,176,177,197,213,214,215,220,230,234,238,240,241,243,244,247,248,251,255,256,267,269,270,271,275,297,317,319,330,],[43,44,53,71,-159,93,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,131,140,-86,-101,-100,-110,-125,179,180,-40,184,-38,-39,-37,-41,-42,-43,-51,-50,198,-38,-39,-159,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,-109,-111,-124,-49,-155,-156,-121,-54,252,-87,-88,-84,-112,-130,-45,277,278,-44,-58,-53,283,-159,-83,-85,-54,-158,-128,-129,-46,-53,-47,331,334,]),'MINUS':([33,38,39,41,45,46,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,77,78,80,81,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,113,114,116,118,119,128,129,130,132,133,134,140,142,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,183,185,192,193,195,199,214,216,217,218,220,230,231,232,233,234,237,240,241,245,248,253,254,255,266,267,269,270,271,272,297,298,302,308,314,316,322,323,325,328,329,],[55,55,55,55,55,55,95,55,55,55,-48,55,-113,-114,-115,-116,-117,-118,-119,-120,55,-122,-123,55,-52,95,95,95,55,95,95,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-101,-100,95,-125,95,95,95,-113,55,-51,55,55,-50,95,55,55,-95,-96,-97,-98,-99,95,95,95,95,95,95,95,95,-111,95,-124,55,-49,-155,-156,-121,55,55,55,-116,-120,95,55,95,55,55,55,95,-112,95,55,-122,-130,55,95,95,55,95,95,95,95,55,-54,-158,-128,-129,55,-53,95,55,55,55,55,-122,55,95,95,95,]),'PLUS':([33,38,39,41,45,46,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,77,78,80,81,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,113,114,116,118,119,128,129,130,132,133,134,140,142,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,183,185,192,193,195,199,214,216,217,218,220,230,231,232,233,234,237,240,241,245,248,253,254,255,266,267,269,270,271,272,297,298,302,308,314,316,322,323,325,328,329,],[54,54,54,54,54,54,94,54,54,54,-48,54,-113,-114,-115,-116,-117,-118,-119,-120,54,-122,-123,54,-52,94,94,94,54,94,94,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-101,-100,94,-125,94,94,94,-113,54,-51,54,54,-50,94,54,54,-95,-96,-97,-98,-99,94,94,94,94,94,94,94,94,-111,94,-124,54,-49,-155,-156,-121,54,54,54,-116,-120,94,54,94,54,54,54,94,-112,94,54,-122,-130,54,94,94,54,94,94,94,94,54,-54,-158,-128,-129,54,-53,94,54,54,54,54,-122,54,94,94,94,]),'NOT':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'NUMBER':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'STRING':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,192,62,62,62,62,62,62,62,62,62,62,62,62,62,62,192,62,62,62,62,62,62,62,]),'TRUE':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FALSE':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'TEMPLATE_LITERAL':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,193,66,66,66,66,66,66,66,66,66,66,66,66,66,66,193,66,66,66,66,66,66,66,]),'NEW':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,186,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,242,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'COLON':([36,42,141,144,146,223,229,250,304,],[73,82,219,222,226,262,73,285,219,]),'RPAREN':([38,57,59,60,61,62,63,64,65,66,68,69,75,76,77,83,84,90,109,110,111,113,116,124,125,126,127,128,129,132,133,144,145,147,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,175,176,177,178,188,189,190,191,192,193,195,196,230,232,233,234,235,236,238,243,252,253,254,257,258,259,260,263,267,268,269,270,271,275,280,281,282,287,290,297,299,302,306,307,317,318,320,321,322,325,],[76,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,129,-52,-55,138,139,146,-101,-100,-110,-125,177,-37,-41,-42,-43,-159,-51,197,-50,-141,223,-139,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,-109,-111,-124,-49,-155,-156,-121,234,244,-59,-60,-63,-64,-65,-56,247,-112,267,269,-130,270,271,-45,-44,-159,291,292,-40,-142,-39,-38,-140,-54,297,-158,-128,-129,-46,-61,-62,-66,305,-92,-53,-131,319,-89,-90,-47,330,-34,-35,-36,-91,]),'ELSE':([43,44,50,53,71,91,93,131,179,180,200,201,202,203,204,205,206,207,208,209,212,277,284,324,],[-57,-21,-94,-20,-22,-93,-19,-25,-23,-67,249,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-24,-69,-80,]),'MULT':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[96,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,96,96,96,96,96,-101,-100,96,-125,96,96,96,-113,-51,-50,96,96,96,-97,-98,-99,96,96,96,96,96,96,96,96,-111,96,-124,-49,-155,-156,-121,-116,-120,96,96,96,-112,96,-122,-130,96,96,96,96,96,96,-54,-158,-128,-129,-53,96,-122,96,96,96,]),'DIV':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[97,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,97,97,97,97,97,-101,-100,97,-125,97,97,97,-113,-51,-50,97,97,97,-97,-98,-99,97,97,97,97,97,97,97,97,-111,97,-124,-49,-155,-156,-121,-116,-120,97,97,97,-112,97,-122,-130,97,97,97,97,97,97,-54,-158,-128,-129,-53,97,-122,97,97,97,]),'MOD':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[98,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,98,98,98,98,98,-101,-100,98,-125,98,98,98,-113,-51,-50,98,98,98,-97,-98,-99,98,98,98,98,98,98,98,98,-111,98,-124,-49,-155,-156,-121,-116,-120,98,98,98,-112,98,-122,-130,98,98,98,98,98,98,-54,-158,-128,-129,-53,98,-122,98,98,98,]),'GT':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,120,124,125,126,127,129,133,134,136,137,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,238,239,240,241,243,248,253,254,255,267,269,270,271,275,297,298,301,317,322,325,328,329,],[99,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,99,99,99,99,99,-101,-100,99,-125,99,99,99,-113,-40,-37,-41,-42,-43,-51,-50,99,-38,-39,-95,-96,-97,-98,-99,-102,-103,-104,-105,99,99,99,99,-111,99,-124,-49,-155,-156,-121,-116,-120,99,99,99,-112,99,-122,-130,-45,275,99,99,-44,99,99,99,99,-54,-158,-128,-129,-46,-53,99,317,-47,-122,99,99,99,]),'LT':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,120,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,257,267,269,270,271,297,298,322,325,328,329,],[100,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,100,100,100,100,100,-101,-100,100,-125,100,100,100,-113,182,-51,-50,100,-95,-96,-97,-98,-99,-102,-103,-104,-105,100,100,100,100,-111,100,-124,-49,-155,-156,-121,-116,-120,100,100,100,-112,100,-122,-130,100,100,100,100,100,100,182,-54,-158,-128,-129,-53,100,-122,100,100,100,]),'GTE':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[101,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,101,101,101,101,101,-101,-100,101,-125,101,101,101,-113,-51,-50,101,-95,-96,-97,-98,-99,-102,-103,-104,-105,101,101,101,101,-111,101,-124,-49,-155,-156,-121,-116,-120,101,101,101,-112,101,-122,-130,101,101,101,101,101,101,-54,-158,-128,-129,-53,101,-122,101,101,101,]),'LTE':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[102,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,102,102,102,102,102,-101,-100,102,-125,102,102,102,-113,-51,-50,102,-95,-96,-97,-98,-99,-102,-103,-104,-105,102,102,102,102,-111,102,-124,-49,-155,-156,-121,-116,-120,102,102,102,-112,102,-122,-130,102,102,102,102,102,102,-54,-158,-128,-129,-53,102,-122,102,102,102,]),'EQ':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[103,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,103,103,103,103,103,-101,-100,103,-125,103,103,103,-113,-51,-50,103,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,103,103,-111,103,-124,-49,-155,-156,-121,-116,-120,103,103,103,-112,103,-122,-130,103,103,103,103,103,103,-54,-158,-128,-129,-53,103,-122,103,103,103,]),'NEQ':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[104,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,104,104,104,104,104,-101,-100,104,-125,104,104,104,-113,-51,-50,104,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,104,104,-111,104,-124,-49,-155,-156,-121,-116,-120,104,104,104,-112,104,-122,-130,104,104,104,104,104,104,-54,-158,-128,-129,-53,104,-122,104,104,104,]),'AND':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[105,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,105,105,105,105,105,-101,-100,-110,-125,105,105,105,-113,-51,-50,105,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,105,-111,105,-124,-49,-155,-156,-121,-116,-120,105,105,105,-112,105,-122,-130,105,105,105,105,105,105,-54,-158,-128,-129,-53,105,-122,105,105,105,]),'OR':([52,57,59,60,61,62,63,64,65,66,68,69,76,77,78,80,83,84,109,110,111,113,114,116,118,119,129,133,134,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,192,193,195,214,220,230,231,233,234,240,241,248,253,254,255,267,269,270,271,297,298,322,325,328,329,],[106,-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,106,106,106,106,106,-101,-100,-110,-125,106,106,106,-113,-51,-50,106,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,-109,-111,106,-124,-49,-155,-156,-121,-116,-120,106,106,106,-112,106,-122,-130,106,106,106,106,106,106,-54,-158,-128,-129,-53,106,-122,106,106,106,]),'COMMA':([57,59,60,61,62,63,64,65,66,68,69,75,76,77,109,110,111,112,113,114,120,124,125,126,127,128,129,133,136,137,144,145,147,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,175,176,177,188,189,190,191,192,193,195,196,230,231,233,234,236,238,239,243,257,258,259,260,263,267,268,269,270,271,273,274,275,280,281,282,297,298,315,317,321,322,329,333,],[-48,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,130,-52,-55,-101,-100,-110,173,-125,-126,-40,-37,-41,-42,-43,-159,-51,-50,-38,-39,-141,224,-139,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,-109,-111,-124,-49,-155,-156,-121,245,130,-60,-63,-64,-65,-56,130,-112,-127,-122,-130,130,-45,276,-44,-40,-142,-39,-38,-140,-54,130,-158,-128,-129,300,-132,-46,130,-62,-66,-53,314,-133,-47,130,-122,314,-134,]),'RBRACKET':([57,58,59,60,61,62,63,64,65,66,68,69,76,80,109,110,111,112,113,114,129,133,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,181,187,230,231,234,237,267,269,270,271,272,273,274,297,298,315,323,328,333,],[-48,113,-113,-114,-115,-116,-117,-118,-119,-120,-122,-123,-52,133,-101,-100,-110,172,-125,-126,-51,-50,-95,-96,-97,-98,-99,-102,-103,-104,-105,-106,-107,-108,-109,-111,230,-124,-49,-155,-156,-121,238,243,-112,-127,-130,113,-54,-158,-128,-129,113,299,-132,-53,-126,-133,113,333,-134,]),'STRING_TYPE':([73,82,182,219,222,226,262,276,285,],[125,125,125,125,125,125,125,125,125,]),'NUMBER_TYPE':([73,82,182,219,222,226,262,276,285,],[126,126,126,126,126,126,126,126,126,]),'BOOLEAN':([73,82,182,219,222,226,262,276,285,],[127,127,127,127,127,127,127,127,127,]),'SIZE':([115,],[175,]),'LENGTH':([115,],[176,]),'IN':([141,],[216,]),'OF':([141,],[217,]),'INC':([288,],[306,]),'DEC':([288,],[307,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'cuerpo':([0,31,225,261,296,312,],[2,49,264,293,313,326,]),'sentencias':([0,31,225,261,296,312,],[3,3,3,3,3,3,]),'empty':([0,31,47,92,128,140,225,251,252,261,296,312,],[4,4,89,150,191,215,4,89,290,4,4,4,]),'sentencia':([0,3,31,225,261,296,312,],[5,35,5,5,5,5,5,]),'asignacion':([0,3,31,92,138,149,225,249,261,296,312,],[6,6,6,153,202,153,6,202,6,6,6,]),'declaracion':([0,3,31,92,149,225,261,296,312,],[7,7,7,154,154,7,7,7,7,]),'impresion':([0,3,31,138,225,249,261,296,312,],[8,8,8,203,8,203,8,8,8,]),'input_teclado':([0,3,31,138,225,249,261,296,312,],[9,9,9,204,9,204,9,9,9,]),'sentencia_if':([0,3,31,138,225,249,261,296,312,],[10,10,10,207,10,207,10,10,10,]),'sentencia_while':([0,3,31,138,225,249,261,296,312,],[11,11,11,208,11,208,11,11,11,]),'sentencia_for':([0,3,31,138,225,249,261,296,312,],[12,12,12,209,12,209,12,12,12,]),'sentencia_for_in':([0,3,31,225,261,296,312,],[13,13,13,13,13,13,13,]),'funcion':([0,3,31,92,149,225,261,296,312,],[14,14,14,152,152,14,14,14,14,]),'clase':([0,3,31,225,261,296,312,],[15,15,15,15,15,15,15,]),'sentencia_return':([0,3,31,138,225,249,261,296,312,],[16,16,16,206,16,206,16,16,16,]),'llamada_funcion_stmt':([0,3,31,138,225,249,261,296,312,],[17,17,17,205,17,205,17,17,17,]),'bloque':([0,3,31,138,139,225,249,261,291,292,296,305,312,],[18,18,18,201,212,18,201,18,309,310,18,324,18,]),'variable':([0,3,31,33,38,39,41,45,46,47,54,55,56,58,67,72,81,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,138,140,142,149,173,178,183,185,199,216,217,218,225,232,237,245,249,251,252,261,266,272,296,302,308,312,314,316,323,],[21,21,21,63,63,63,63,63,63,88,63,63,63,63,63,63,63,156,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,21,63,63,156,63,63,63,63,63,63,63,63,21,63,63,63,21,88,289,21,63,63,21,63,63,21,63,63,63,]),'declaracion_array':([0,3,31,92,149,225,261,296,312,],[23,23,23,23,23,23,23,23,23,]),'declaracion_map_set':([0,3,31,92,149,225,261,296,312,],[24,24,24,24,24,24,24,24,24,]),'console_log':([0,3,31,138,225,249,261,296,312,],[25,25,25,25,25,25,25,25,25,]),'llamada_funcion':([0,3,31,33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,138,140,142,173,178,183,185,199,216,217,218,225,232,237,245,249,261,266,272,296,302,308,312,314,316,323,],[26,26,26,59,59,59,59,59,59,59,59,59,59,59,119,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,26,59,59,59,59,59,59,59,59,59,59,26,59,59,59,26,26,59,59,26,59,59,26,59,59,59,]),'llamada_metodo':([0,3,31,33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,138,140,142,173,178,183,185,199,216,217,218,225,232,237,245,249,261,266,272,296,302,308,312,314,316,323,],[34,34,34,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,34,60,60,60,60,60,60,60,60,60,60,34,60,60,60,34,34,60,60,34,60,60,34,60,60,60,]),'expresion':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[52,77,78,80,83,84,109,110,111,114,116,118,134,157,158,159,160,161,162,163,164,165,166,167,168,169,171,77,195,77,214,220,231,77,240,241,248,253,254,255,77,114,77,118,298,77,325,328,329,114,]),'array_literal':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,233,68,68,68,68,68,68,68,68,68,68,68,322,68,68,68,68,]),'map_set_literal':([33,38,39,41,45,46,54,55,56,58,67,72,81,94,95,96,97,98,99,100,101,102,103,104,105,106,108,128,130,132,140,142,173,178,183,185,199,216,217,218,232,237,245,266,272,302,308,314,316,323,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'argumentos':([38,128,132,178,232,245,302,],[75,189,196,236,268,280,321,]),'inicializacion':([47,251,],[85,85,]),'elementos':([58,237,272,323,],[112,112,112,112,]),'tipo':([73,82,182,219,222,226,262,276,285,],[121,135,239,256,258,265,294,301,303,]),'tipo_array':([73,82,182,219,222,226,262,276,285,],[122,136,136,136,260,136,136,136,136,]),'tipo_generico':([73,82,182,219,222,226,262,276,285,],[123,137,137,137,259,137,137,137,137,]),'tipo_primitivo':([73,82,182,219,222,226,262,276,285,],[124,124,124,124,124,124,124,124,124,]),'parametros':([90,],[145,]),'parametro':([90,224,],[147,263,]),'cuerpo_clase':([92,],[148,]),'elementos_clase':([92,],[149,]),'elemento_clase':([92,149,],[151,228,]),'lista_argumentos':([128,],[188,]),'string_especial':([128,245,],[190,281,]),'sentencia_ejecutable':([138,249,],[200,284,]),'condicion':([140,],[213,]),'array_de_pares':([178,302,],[235,320,]),'pares':([237,323,],[273,273,]),'par':([237,300,323,],[274,315,274,]),'incremento':([252,],[287,]),'argumentos_constructor':([302,],[318,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','sintactico.py',28),
  ('cuerpo -> sentencias','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','sintactico.py',38),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','sintactico.py',39),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',44),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','sintactico.py',45),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','sintactico.py',46),
  ('sentencia -> input_teclado','sentencia',1,'p_sentencia','sintactico.py',47),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','sintactico.py',48),
  ('sentencia -> sentencia_while','sentencia',1,'p_sentencia','sintactico.py',49),
  ('sentencia -> sentencia_for','sentencia',1,'p_sentencia','sintactico.py',50),
  ('sentencia -> sentencia_for_in','sentencia',1,'p_sentencia','sintactico.py',51),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','sintactico.py',52),
  ('sentencia -> clase','sentencia',1,'p_sentencia','sintactico.py',53),
  ('sentencia -> sentencia_return','sentencia',1,'p_sentencia','sintactico.py',54),
  ('sentencia -> llamada_funcion_stmt','sentencia',1,'p_sentencia','sintactico.py',55),
  ('sentencia -> bloque','sentencia',1,'p_sentencia','sintactico.py',56),
  ('sentencia_return -> RETURN expresion SEMICOLON','sentencia_return',3,'p_sentencia_return','sintactico.py',60),
  ('sentencia_return -> RETURN SEMICOLON','sentencia_return',2,'p_sentencia_return','sintactico.py',61),
  ('llamada_funcion_stmt -> llamada_funcion SEMICOLON','llamada_funcion_stmt',2,'p_llamada_funcion_stmt','sintactico.py',66),
  ('llamada_funcion_stmt -> llamada_metodo SEMICOLON','llamada_funcion_stmt',2,'p_llamada_funcion_stmt','sintactico.py',67),
  ('asignacion -> LET ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','sintactico.py',72),
  ('asignacion -> LET ID COLON tipo ASSIGN expresion SEMICOLON','asignacion',7,'p_asignacion','sintactico.py',73),
  ('asignacion -> variable ASSIGN expresion SEMICOLON','asignacion',4,'p_asignacion','sintactico.py',74),
  ('declaracion -> CONST ID ASSIGN expresion SEMICOLON','declaracion',5,'p_declaracion','sintactico.py',84),
  ('declaracion -> CONST ID COLON tipo ASSIGN expresion SEMICOLON','declaracion',7,'p_declaracion','sintactico.py',85),
  ('declaracion -> LET ID COLON tipo SEMICOLON','declaracion',5,'p_declaracion','sintactico.py',86),
  ('declaracion -> declaracion_array','declaracion',1,'p_declaracion','sintactico.py',87),
  ('declaracion -> declaracion_map_set','declaracion',1,'p_declaracion','sintactico.py',88),
  ('declaracion_array -> LET ID COLON tipo_array ASSIGN expresion SEMICOLON','declaracion_array',7,'p_declaracion_array','sintactico.py',96),
  ('declaracion_map_set -> LET ID COLON tipo_generico ASSIGN NEW ID LPAREN argumentos_constructor RPAREN SEMICOLON','declaracion_map_set',11,'p_declaracion_map_set','sintactico.py',101),
  ('declaracion_map_set -> LET ID COLON tipo_generico ASSIGN NEW ID LPAREN RPAREN SEMICOLON','declaracion_map_set',10,'p_declaracion_map_set','sintactico.py',102),
  ('argumentos_constructor -> array_de_pares','argumentos_constructor',1,'p_argumentos_constructor','sintactico.py',107),
  ('argumentos_constructor -> argumentos','argumentos_constructor',1,'p_argumentos_constructor','sintactico.py',108),
  ('argumentos_constructor -> array_literal','argumentos_constructor',1,'p_argumentos_constructor','sintactico.py',109),
  ('tipo -> tipo_primitivo','tipo',1,'p_tipo','sintactico.py',114),
  ('tipo -> tipo_array','tipo',1,'p_tipo','sintactico.py',115),
  ('tipo -> tipo_generico','tipo',1,'p_tipo','sintactico.py',116),
  ('tipo -> ID','tipo',1,'p_tipo','sintactico.py',117),
  ('tipo_primitivo -> STRING_TYPE','tipo_primitivo',1,'p_tipo_primitivo','sintactico.py',121),
  ('tipo_primitivo -> NUMBER_TYPE','tipo_primitivo',1,'p_tipo_primitivo','sintactico.py',122),
  ('tipo_primitivo -> BOOLEAN','tipo_primitivo',1,'p_tipo_primitivo','sintactico.py',123),
  ('tipo_array -> tipo_primitivo LBRACKET RBRACKET','tipo_array',3,'p_tipo_array','sintactico.py',127),
  ('tipo_array -> ID LBRACKET RBRACKET','tipo_array',3,'p_tipo_array','sintactico.py',128),
  ('tipo_generico -> ID LT tipo GT','tipo_generico',4,'p_tipo_generico','sintactico.py',132),
  ('tipo_generico -> ID LT tipo COMMA tipo GT','tipo_generico',6,'p_tipo_generico','sintactico.py',133),
  ('variable -> ID','variable',1,'p_variable','sintactico.py',138),
  ('variable -> variable PUNTO ID','variable',3,'p_variable','sintactico.py',139),
  ('variable -> variable LBRACKET expresion RBRACKET','variable',4,'p_variable','sintactico.py',140),
  ('llamada_funcion -> ID LPAREN argumentos RPAREN','llamada_funcion',4,'p_llamada_funcion','sintactico.py',145),
  ('llamada_funcion -> ID LPAREN RPAREN','llamada_funcion',3,'p_llamada_funcion','sintactico.py',146),
  ('llamada_metodo -> variable PUNTO ID LPAREN argumentos RPAREN','llamada_metodo',6,'p_llamada_metodo','sintactico.py',151),
  ('llamada_metodo -> variable PUNTO ID LPAREN RPAREN','llamada_metodo',5,'p_llamada_metodo','sintactico.py',152),
  ('argumentos -> expresion','argumentos',1,'p_argumentos','sintactico.py',157),
  ('argumentos -> argumentos COMMA expresion','argumentos',3,'p_argumentos','sintactico.py',158),
  ('impresion -> console_log SEMICOLON','impresion',2,'p_impresion','sintactico.py',163),
  ('console_log -> ID PUNTO ID LPAREN lista_argumentos RPAREN','console_log',6,'p_console_log','sintactico.py',168),
  ('lista_argumentos -> argumentos','lista_argumentos',1,'p_lista_argumentos','sintactico.py',172),
  ('lista_argumentos -> string_especial','lista_argumentos',1,'p_lista_argumentos','sintactico.py',173),
  ('lista_argumentos -> lista_argumentos COMMA argumentos','lista_argumentos',3,'p_lista_argumentos','sintactico.py',174),
  ('lista_argumentos -> lista_argumentos COMMA string_especial','lista_argumentos',3,'p_lista_argumentos','sintactico.py',175),
  ('lista_argumentos -> empty','lista_argumentos',1,'p_lista_argumentos','sintactico.py',176),
  ('string_especial -> STRING','string_especial',1,'p_string_especial','sintactico.py',180),
  ('string_especial -> TEMPLATE_LITERAL','string_especial',1,'p_string_especial','sintactico.py',181),
  ('string_especial -> LBRACE ID RBRACE','string_especial',3,'p_string_especial','sintactico.py',182),
  ('input_teclado -> LET ID ASSIGN llamada_funcion SEMICOLON','input_teclado',5,'p_input_teclado','sintactico.py',187),
  ('sentencia_if -> IF LPAREN expresion RPAREN sentencia_ejecutable','sentencia_if',5,'p_sentencia_if','sintactico.py',193),
  ('sentencia_if -> IF LPAREN expresion RPAREN sentencia_ejecutable ELSE sentencia_ejecutable','sentencia_if',7,'p_sentencia_if','sintactico.py',194),
  ('sentencia_ejecutable -> bloque','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',199),
  ('sentencia_ejecutable -> asignacion','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',200),
  ('sentencia_ejecutable -> impresion','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',201),
  ('sentencia_ejecutable -> input_teclado','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',202),
  ('sentencia_ejecutable -> llamada_funcion_stmt','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',203),
  ('sentencia_ejecutable -> sentencia_return','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',204),
  ('sentencia_ejecutable -> sentencia_if','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',205),
  ('sentencia_ejecutable -> sentencia_while','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',206),
  ('sentencia_ejecutable -> sentencia_for','sentencia_ejecutable',1,'p_sentencia_ejecutable','sintactico.py',207),
  ('sentencia_while -> WHILE LPAREN expresion RPAREN bloque','sentencia_while',5,'p_sentencia_while','sintactico.py',211),
  ('sentencia_for -> FOR LPAREN inicializacion SEMICOLON condicion SEMICOLON incremento RPAREN bloque','sentencia_for',9,'p_sentencia_for','sintactico.py',216),
  ('sentencia_for_in -> FOR LPAREN LET ID IN expresion RPAREN bloque','sentencia_for_in',8,'p_sentencia_for_in','sintactico.py',221),
  ('sentencia_for_in -> FOR LPAREN LET ID OF expresion RPAREN bloque','sentencia_for_in',8,'p_sentencia_for_in','sintactico.py',222),
  ('inicializacion -> LET ID ASSIGN expresion','inicializacion',4,'p_inicializacion','sintactico.py',227),
  ('inicializacion -> variable ASSIGN expresion','inicializacion',3,'p_inicializacion','sintactico.py',228),
  ('inicializacion -> LET ID COLON tipo','inicializacion',4,'p_inicializacion','sintactico.py',229),
  ('inicializacion -> empty','inicializacion',1,'p_inicializacion','sintactico.py',230),
  ('condicion -> expresion','condicion',1,'p_condicion','sintactico.py',234),
  ('condicion -> empty','condicion',1,'p_condicion','sintactico.py',235),
  ('incremento -> ID INC','incremento',2,'p_incremento','sintactico.py',239),
  ('incremento -> ID DEC','incremento',2,'p_incremento','sintactico.py',240),
  ('incremento -> variable ASSIGN expresion','incremento',3,'p_incremento','sintactico.py',241),
  ('incremento -> empty','incremento',1,'p_incremento','sintactico.py',242),
  ('bloque -> LBRACE cuerpo RBRACE','bloque',3,'p_bloque','sintactico.py',246),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','sintactico.py',247),
  ('expresion -> expresion PLUS expresion','expresion',3,'p_expresion_binaria_aritmetica','sintactico.py',252),
  ('expresion -> expresion MINUS expresion','expresion',3,'p_expresion_binaria_aritmetica','sintactico.py',253),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binaria_aritmetica','sintactico.py',254),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria_aritmetica','sintactico.py',255),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria_aritmetica','sintactico.py',256),
  ('expresion -> MINUS expresion','expresion',2,'p_expresion_unaria','sintactico.py',260),
  ('expresion -> PLUS expresion','expresion',2,'p_expresion_unaria','sintactico.py',261),
  ('expresion -> expresion GT expresion','expresion',3,'p_expresion_relacional','sintactico.py',265),
  ('expresion -> expresion LT expresion','expresion',3,'p_expresion_relacional','sintactico.py',266),
  ('expresion -> expresion GTE expresion','expresion',3,'p_expresion_relacional','sintactico.py',267),
  ('expresion -> expresion LTE expresion','expresion',3,'p_expresion_relacional','sintactico.py',268),
  ('expresion -> expresion EQ expresion','expresion',3,'p_expresion_relacional','sintactico.py',269),
  ('expresion -> expresion NEQ expresion','expresion',3,'p_expresion_relacional','sintactico.py',270),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','sintactico.py',274),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','sintactico.py',275),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_negacion','sintactico.py',279),
  ('expresion -> expresion PUNTO ID','expresion',3,'p_expresion_acceso','sintactico.py',283),
  ('expresion -> expresion LBRACKET expresion RBRACKET','expresion',4,'p_expresion_acceso','sintactico.py',284),
  ('expresion -> llamada_funcion','expresion',1,'p_expresion_llamadas','sintactico.py',288),
  ('expresion -> llamada_metodo','expresion',1,'p_expresion_llamadas','sintactico.py',289),
  ('expresion -> NUMBER','expresion',1,'p_expresion_basica','sintactico.py',293),
  ('expresion -> STRING','expresion',1,'p_expresion_basica','sintactico.py',294),
  ('expresion -> variable','expresion',1,'p_expresion_basica','sintactico.py',295),
  ('expresion -> TRUE','expresion',1,'p_expresion_basica','sintactico.py',296),
  ('expresion -> FALSE','expresion',1,'p_expresion_basica','sintactico.py',297),
  ('expresion -> TEMPLATE_LITERAL','expresion',1,'p_expresion_basica','sintactico.py',298),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion_basica','sintactico.py',299),
  ('expresion -> array_literal','expresion',1,'p_expresion_basica','sintactico.py',300),
  ('expresion -> map_set_literal','expresion',1,'p_expresion_basica','sintactico.py',301),
  ('array_literal -> LBRACKET elementos RBRACKET','array_literal',3,'p_array_literal','sintactico.py',306),
  ('array_literal -> LBRACKET RBRACKET','array_literal',2,'p_array_literal','sintactico.py',307),
  ('elementos -> expresion','elementos',1,'p_elementos','sintactico.py',312),
  ('elementos -> elementos COMMA expresion','elementos',3,'p_elementos','sintactico.py',313),
  ('map_set_literal -> NEW ID LPAREN array_de_pares RPAREN','map_set_literal',5,'p_map_set_literal','sintactico.py',317),
  ('map_set_literal -> NEW ID LPAREN argumentos RPAREN','map_set_literal',5,'p_map_set_literal','sintactico.py',318),
  ('map_set_literal -> NEW ID LPAREN RPAREN','map_set_literal',4,'p_map_set_literal','sintactico.py',319),
  ('array_de_pares -> LBRACKET pares RBRACKET','array_de_pares',3,'p_array_de_pares','sintactico.py',324),
  ('pares -> par','pares',1,'p_pares','sintactico.py',328),
  ('pares -> pares COMMA par','pares',3,'p_pares','sintactico.py',329),
  ('par -> LBRACKET expresion COMMA expresion RBRACKET','par',5,'p_par','sintactico.py',333),
  ('funcion -> FUNCTION ID LPAREN parametros RPAREN LBRACE cuerpo RBRACE','funcion',8,'p_funcion','sintactico.py',338),
  ('funcion -> FUNCTION ID LPAREN parametros RPAREN COLON tipo LBRACE cuerpo RBRACE','funcion',10,'p_funcion','sintactico.py',339),
  ('funcion -> FUNCTION ID LPAREN RPAREN LBRACE cuerpo RBRACE','funcion',7,'p_funcion','sintactico.py',340),
  ('funcion -> FUNCTION ID LPAREN RPAREN COLON tipo LBRACE cuerpo RBRACE','funcion',9,'p_funcion','sintactico.py',341),
  ('parametros -> parametro','parametros',1,'p_parametros','sintactico.py',346),
  ('parametros -> parametros COMMA parametro','parametros',3,'p_parametros','sintactico.py',347),
  ('parametro -> ID','parametro',1,'p_parametro','sintactico.py',351),
  ('parametro -> ID COLON tipo','parametro',3,'p_parametro','sintactico.py',352),
  ('parametro -> ID COLON tipo_generico','parametro',3,'p_parametro','sintactico.py',353),
  ('parametro -> ID COLON tipo_array','parametro',3,'p_parametro','sintactico.py',354),
  ('clase -> CLASS ID LBRACE cuerpo_clase RBRACE','clase',5,'p_clase','sintactico.py',359),
  ('cuerpo_clase -> elementos_clase','cuerpo_clase',1,'p_cuerpo_clase','sintactico.py',364),
  ('cuerpo_clase -> empty','cuerpo_clase',1,'p_cuerpo_clase','sintactico.py',365),
  ('elementos_clase -> elemento_clase','elementos_clase',1,'p_elementos_clase','sintactico.py',369),
  ('elementos_clase -> elementos_clase elemento_clase','elementos_clase',2,'p_elementos_clase','sintactico.py',370),
  ('elemento_clase -> funcion','elemento_clase',1,'p_elemento_clase','sintactico.py',374),
  ('elemento_clase -> asignacion','elemento_clase',1,'p_elemento_clase','sintactico.py',375),
  ('elemento_clase -> declaracion','elemento_clase',1,'p_elemento_clase','sintactico.py',376),
  ('expresion -> variable PUNTO ID LPAREN RPAREN','expresion',5,'p_expresion_metodos_especiales','sintactico.py',381),
  ('expresion -> variable PUNTO ID LPAREN argumentos RPAREN','expresion',6,'p_expresion_metodos_especiales','sintactico.py',382),
  ('expresion -> variable PUNTO SIZE','expresion',3,'p_expresion_metodos_especiales','sintactico.py',383),
  ('expresion -> variable PUNTO LENGTH','expresion',3,'p_expresion_metodos_especiales','sintactico.py',384),
  ('expresion -> variable PUNTO ID','expresion',3,'p_expresion_propiedades','sintactico.py',390),
  ('expresion -> NEW ID LPAREN array_literal RPAREN','expresion',5,'p_expresion_constructor_con_array','sintactico.py',397),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',403),
]
